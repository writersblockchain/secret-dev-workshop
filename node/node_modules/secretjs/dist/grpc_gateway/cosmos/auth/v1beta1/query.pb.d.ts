import * as fm from "../../../fetch.pb";
import * as GoogleProtobufAny from "../../../google/protobuf/any.pb";
import * as CosmosBaseQueryV1beta1Pagination from "../../base/query/v1beta1/pagination.pb";
import * as CosmosAuthV1beta1Auth from "./auth.pb";
export declare type QueryAccountsRequest = {
    pagination?: CosmosBaseQueryV1beta1Pagination.PageRequest;
};
export declare type QueryAccountsResponse = {
    accounts?: GoogleProtobufAny.Any[];
    pagination?: CosmosBaseQueryV1beta1Pagination.PageResponse;
};
export declare type QueryAccountRequest = {
    address?: string;
};
export declare type QueryAccountResponse = {
    account?: GoogleProtobufAny.Any;
};
export declare type QueryParamsRequest = {};
export declare type QueryParamsResponse = {
    params?: CosmosAuthV1beta1Auth.Params;
};
export declare type QueryModuleAccountsRequest = {};
export declare type QueryModuleAccountsResponse = {
    accounts?: GoogleProtobufAny.Any[];
};
export declare type QueryModuleAccountByNameRequest = {
    name?: string;
};
export declare type QueryModuleAccountByNameResponse = {
    account?: GoogleProtobufAny.Any;
};
export declare type Bech32PrefixRequest = {};
export declare type Bech32PrefixResponse = {
    bech32_prefix?: string;
};
export declare type AddressBytesToStringRequest = {
    address_bytes?: Uint8Array;
};
export declare type AddressBytesToStringResponse = {
    address_string?: string;
};
export declare type AddressStringToBytesRequest = {
    address_string?: string;
};
export declare type AddressStringToBytesResponse = {
    address_bytes?: Uint8Array;
};
export declare type QueryAccountAddressByIDRequest = {
    id?: string;
    account_id?: string;
};
export declare type QueryAccountAddressByIDResponse = {
    account_address?: string;
};
export declare type QueryAccountInfoRequest = {
    address?: string;
};
export declare type QueryAccountInfoResponse = {
    info?: CosmosAuthV1beta1Auth.BaseAccount;
};
export declare class Query {
    static Accounts(req: QueryAccountsRequest, initReq?: fm.InitReq): Promise<QueryAccountsResponse>;
    static Account(req: QueryAccountRequest, initReq?: fm.InitReq): Promise<QueryAccountResponse>;
    static AccountAddressByID(req: QueryAccountAddressByIDRequest, initReq?: fm.InitReq): Promise<QueryAccountAddressByIDResponse>;
    static Params(req: QueryParamsRequest, initReq?: fm.InitReq): Promise<QueryParamsResponse>;
    static ModuleAccounts(req: QueryModuleAccountsRequest, initReq?: fm.InitReq): Promise<QueryModuleAccountsResponse>;
    static ModuleAccountByName(req: QueryModuleAccountByNameRequest, initReq?: fm.InitReq): Promise<QueryModuleAccountByNameResponse>;
    static Bech32Prefix(req: Bech32PrefixRequest, initReq?: fm.InitReq): Promise<Bech32PrefixResponse>;
    static AddressBytesToString(req: AddressBytesToStringRequest, initReq?: fm.InitReq): Promise<AddressBytesToStringResponse>;
    static AddressStringToBytes(req: AddressStringToBytesRequest, initReq?: fm.InitReq): Promise<AddressStringToBytesResponse>;
    static AccountInfo(req: QueryAccountInfoRequest, initReq?: fm.InitReq): Promise<QueryAccountInfoResponse>;
}
//# sourceMappingURL=query.pb.d.ts.map