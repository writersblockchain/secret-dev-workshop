import * as GoogleProtobufAny from "../../../../google/protobuf/any.pb";
import * as CosmosCryptoHdV1Hd from "../../hd/v1/hd.pb";
declare type Absent<T, K extends keyof T> = {
    [k in Exclude<keyof T, K>]?: undefined;
};
declare type OneOf<T> = {
    [k in keyof T]?: undefined;
} | (keyof T extends infer K ? (K extends string & keyof T ? {
    [k in K]: T[K];
} & Absent<T, K> : never) : never);
export declare type RecordLocal = {
    priv_key?: GoogleProtobufAny.Any;
};
export declare type RecordLedger = {
    path?: CosmosCryptoHdV1Hd.BIP44Params;
};
export declare type RecordMulti = {};
export declare type RecordOffline = {};
declare type BaseRecord = {
    name?: string;
    pub_key?: GoogleProtobufAny.Any;
};
export declare type Record = BaseRecord & OneOf<{
    local: RecordLocal;
    ledger: RecordLedger;
    multi: RecordMulti;
    offline: RecordOffline;
}>;
export {};
//# sourceMappingURL=record.pb.d.ts.map