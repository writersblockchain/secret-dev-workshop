import * as fm from "../../../fetch.pb";
import * as GoogleProtobufAny from "../../../google/protobuf/any.pb";
import * as GoogleProtobufTimestamp from "../../../google/protobuf/timestamp.pb";
import * as CosmosBaseV1beta1Coin from "../../base/v1beta1/coin.pb";
import * as CosmosGovV1Gov from "./gov.pb";
export declare type MsgSubmitProposal = {
    messages?: GoogleProtobufAny.Any[];
    initial_deposit?: CosmosBaseV1beta1Coin.Coin[];
    proposer?: string;
    metadata?: string;
    title?: string;
    summary?: string;
    expedited?: boolean;
};
export declare type MsgSubmitProposalResponse = {
    proposal_id?: string;
};
export declare type MsgExecLegacyContent = {
    content?: GoogleProtobufAny.Any;
    authority?: string;
};
export declare type MsgExecLegacyContentResponse = {};
export declare type MsgVote = {
    proposal_id?: string;
    voter?: string;
    option?: CosmosGovV1Gov.VoteOption;
    metadata?: string;
};
export declare type MsgVoteResponse = {};
export declare type MsgVoteWeighted = {
    proposal_id?: string;
    voter?: string;
    options?: CosmosGovV1Gov.WeightedVoteOption[];
    metadata?: string;
};
export declare type MsgVoteWeightedResponse = {};
export declare type MsgDeposit = {
    proposal_id?: string;
    depositor?: string;
    amount?: CosmosBaseV1beta1Coin.Coin[];
};
export declare type MsgDepositResponse = {};
export declare type MsgUpdateParams = {
    authority?: string;
    params?: CosmosGovV1Gov.Params;
};
export declare type MsgUpdateParamsResponse = {};
export declare type MsgCancelProposal = {
    proposal_id?: string;
    proposer?: string;
};
export declare type MsgCancelProposalResponse = {
    proposal_id?: string;
    canceled_time?: GoogleProtobufTimestamp.Timestamp;
    canceled_height?: string;
};
export declare class Msg {
    static SubmitProposal(req: MsgSubmitProposal, initReq?: fm.InitReq): Promise<MsgSubmitProposalResponse>;
    static ExecLegacyContent(req: MsgExecLegacyContent, initReq?: fm.InitReq): Promise<MsgExecLegacyContentResponse>;
    static Vote(req: MsgVote, initReq?: fm.InitReq): Promise<MsgVoteResponse>;
    static VoteWeighted(req: MsgVoteWeighted, initReq?: fm.InitReq): Promise<MsgVoteWeightedResponse>;
    static Deposit(req: MsgDeposit, initReq?: fm.InitReq): Promise<MsgDepositResponse>;
    static UpdateParams(req: MsgUpdateParams, initReq?: fm.InitReq): Promise<MsgUpdateParamsResponse>;
    static CancelProposal(req: MsgCancelProposal, initReq?: fm.InitReq): Promise<MsgCancelProposalResponse>;
}
//# sourceMappingURL=tx.pb.d.ts.map