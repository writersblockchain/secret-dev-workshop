import * as fm from "../../../../../fetch.pb";
import * as IbcCoreChannelV1Channel from "../../../../core/channel/v1/channel.pb";
import * as IbcApplicationsInterchain_accountsV1Packet from "../../v1/packet.pb";
import * as IbcApplicationsInterchain_accountsControllerV1Controller from "./controller.pb";
export declare type MsgRegisterInterchainAccount = {
    owner?: string;
    connection_id?: string;
    version?: string;
    ordering?: IbcCoreChannelV1Channel.Order;
};
export declare type MsgRegisterInterchainAccountResponse = {
    channel_id?: string;
    port_id?: string;
};
export declare type MsgSendTx = {
    owner?: string;
    connection_id?: string;
    packet_data?: IbcApplicationsInterchain_accountsV1Packet.InterchainAccountPacketData;
    relative_timeout?: string;
};
export declare type MsgSendTxResponse = {
    sequence?: string;
};
export declare type MsgUpdateParams = {
    signer?: string;
    params?: IbcApplicationsInterchain_accountsControllerV1Controller.Params;
};
export declare type MsgUpdateParamsResponse = {};
export declare class Msg {
    static RegisterInterchainAccount(req: MsgRegisterInterchainAccount, initReq?: fm.InitReq): Promise<MsgRegisterInterchainAccountResponse>;
    static SendTx(req: MsgSendTx, initReq?: fm.InitReq): Promise<MsgSendTxResponse>;
    static UpdateParams(req: MsgUpdateParams, initReq?: fm.InitReq): Promise<MsgUpdateParamsResponse>;
}
//# sourceMappingURL=tx.pb.d.ts.map