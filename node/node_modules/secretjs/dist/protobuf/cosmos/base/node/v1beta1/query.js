"use strict";
// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.178.0
//   protoc               v3.21.3
// source: cosmos/base/node/v1beta1/query.proto
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ServiceClientImpl = exports.ServiceServiceName = exports.StatusResponse = exports.StatusRequest = exports.ConfigResponse = exports.ConfigRequest = exports.protobufPackage = void 0;
/* eslint-disable */
const long_1 = __importDefault(require("long"));
const _m0 = __importStar(require("protobufjs/minimal"));
const timestamp_1 = require("../../../../google/protobuf/timestamp");
exports.protobufPackage = "cosmos.base.node.v1beta1";
function createBaseConfigRequest() {
    return {};
}
exports.ConfigRequest = {
    encode(_, writer = _m0.Writer.create()) {
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseConfigRequest();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(_) {
        return {};
    },
    toJSON(_) {
        const obj = {};
        return obj;
    },
    create(base) {
        return exports.ConfigRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(_) {
        const message = createBaseConfigRequest();
        return message;
    },
};
function createBaseConfigResponse() {
    return { minimum_gas_price: "", pruning_keep_recent: "", pruning_interval: "", halt_height: "0" };
}
exports.ConfigResponse = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.minimum_gas_price !== "") {
            writer.uint32(10).string(message.minimum_gas_price);
        }
        if (message.pruning_keep_recent !== "") {
            writer.uint32(18).string(message.pruning_keep_recent);
        }
        if (message.pruning_interval !== "") {
            writer.uint32(26).string(message.pruning_interval);
        }
        if (message.halt_height !== "0") {
            writer.uint32(32).uint64(message.halt_height);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseConfigResponse();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.minimum_gas_price = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.pruning_keep_recent = reader.string();
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.pruning_interval = reader.string();
                    continue;
                case 4:
                    if (tag !== 32) {
                        break;
                    }
                    message.halt_height = longToString(reader.uint64());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return {
            minimum_gas_price: isSet(object.minimum_gas_price) ? globalThis.String(object.minimum_gas_price) : "",
            pruning_keep_recent: isSet(object.pruning_keep_recent) ? globalThis.String(object.pruning_keep_recent) : "",
            pruning_interval: isSet(object.pruning_interval) ? globalThis.String(object.pruning_interval) : "",
            halt_height: isSet(object.halt_height) ? globalThis.String(object.halt_height) : "0",
        };
    },
    toJSON(message) {
        const obj = {};
        if (message.minimum_gas_price !== "") {
            obj.minimum_gas_price = message.minimum_gas_price;
        }
        if (message.pruning_keep_recent !== "") {
            obj.pruning_keep_recent = message.pruning_keep_recent;
        }
        if (message.pruning_interval !== "") {
            obj.pruning_interval = message.pruning_interval;
        }
        if (message.halt_height !== "0") {
            obj.halt_height = message.halt_height;
        }
        return obj;
    },
    create(base) {
        return exports.ConfigResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        var _a, _b, _c, _d;
        const message = createBaseConfigResponse();
        message.minimum_gas_price = (_a = object.minimum_gas_price) !== null && _a !== void 0 ? _a : "";
        message.pruning_keep_recent = (_b = object.pruning_keep_recent) !== null && _b !== void 0 ? _b : "";
        message.pruning_interval = (_c = object.pruning_interval) !== null && _c !== void 0 ? _c : "";
        message.halt_height = (_d = object.halt_height) !== null && _d !== void 0 ? _d : "0";
        return message;
    },
};
function createBaseStatusRequest() {
    return {};
}
exports.StatusRequest = {
    encode(_, writer = _m0.Writer.create()) {
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseStatusRequest();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(_) {
        return {};
    },
    toJSON(_) {
        const obj = {};
        return obj;
    },
    create(base) {
        return exports.StatusRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(_) {
        const message = createBaseStatusRequest();
        return message;
    },
};
function createBaseStatusResponse() {
    return {
        earliest_store_height: "0",
        height: "0",
        timestamp: undefined,
        app_hash: new Uint8Array(0),
        validator_hash: new Uint8Array(0),
    };
}
exports.StatusResponse = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.earliest_store_height !== "0") {
            writer.uint32(8).uint64(message.earliest_store_height);
        }
        if (message.height !== "0") {
            writer.uint32(16).uint64(message.height);
        }
        if (message.timestamp !== undefined) {
            timestamp_1.Timestamp.encode(message.timestamp, writer.uint32(26).fork()).ldelim();
        }
        if (message.app_hash.length !== 0) {
            writer.uint32(34).bytes(message.app_hash);
        }
        if (message.validator_hash.length !== 0) {
            writer.uint32(42).bytes(message.validator_hash);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseStatusResponse();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 8) {
                        break;
                    }
                    message.earliest_store_height = longToString(reader.uint64());
                    continue;
                case 2:
                    if (tag !== 16) {
                        break;
                    }
                    message.height = longToString(reader.uint64());
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.timestamp = timestamp_1.Timestamp.decode(reader, reader.uint32());
                    continue;
                case 4:
                    if (tag !== 34) {
                        break;
                    }
                    message.app_hash = reader.bytes();
                    continue;
                case 5:
                    if (tag !== 42) {
                        break;
                    }
                    message.validator_hash = reader.bytes();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return {
            earliest_store_height: isSet(object.earliest_store_height)
                ? globalThis.String(object.earliest_store_height)
                : "0",
            height: isSet(object.height) ? globalThis.String(object.height) : "0",
            timestamp: isSet(object.timestamp) ? fromJsonTimestamp(object.timestamp) : undefined,
            app_hash: isSet(object.app_hash) ? bytesFromBase64(object.app_hash) : new Uint8Array(0),
            validator_hash: isSet(object.validator_hash) ? bytesFromBase64(object.validator_hash) : new Uint8Array(0),
        };
    },
    toJSON(message) {
        const obj = {};
        if (message.earliest_store_height !== "0") {
            obj.earliest_store_height = message.earliest_store_height;
        }
        if (message.height !== "0") {
            obj.height = message.height;
        }
        if (message.timestamp !== undefined) {
            obj.timestamp = fromTimestamp(message.timestamp).toISOString();
        }
        if (message.app_hash.length !== 0) {
            obj.app_hash = base64FromBytes(message.app_hash);
        }
        if (message.validator_hash.length !== 0) {
            obj.validator_hash = base64FromBytes(message.validator_hash);
        }
        return obj;
    },
    create(base) {
        return exports.StatusResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        var _a, _b, _c, _d;
        const message = createBaseStatusResponse();
        message.earliest_store_height = (_a = object.earliest_store_height) !== null && _a !== void 0 ? _a : "0";
        message.height = (_b = object.height) !== null && _b !== void 0 ? _b : "0";
        message.timestamp = (object.timestamp !== undefined && object.timestamp !== null)
            ? timestamp_1.Timestamp.fromPartial(object.timestamp)
            : undefined;
        message.app_hash = (_c = object.app_hash) !== null && _c !== void 0 ? _c : new Uint8Array(0);
        message.validator_hash = (_d = object.validator_hash) !== null && _d !== void 0 ? _d : new Uint8Array(0);
        return message;
    },
};
exports.ServiceServiceName = "cosmos.base.node.v1beta1.Service";
class ServiceClientImpl {
    constructor(rpc, opts) {
        this.service = (opts === null || opts === void 0 ? void 0 : opts.service) || exports.ServiceServiceName;
        this.rpc = rpc;
        this.Config = this.Config.bind(this);
        this.Status = this.Status.bind(this);
    }
    Config(request) {
        const data = exports.ConfigRequest.encode(request).finish();
        const promise = this.rpc.request(this.service, "Config", data);
        return promise.then((data) => exports.ConfigResponse.decode(_m0.Reader.create(data)));
    }
    Status(request) {
        const data = exports.StatusRequest.encode(request).finish();
        const promise = this.rpc.request(this.service, "Status", data);
        return promise.then((data) => exports.StatusResponse.decode(_m0.Reader.create(data)));
    }
}
exports.ServiceClientImpl = ServiceClientImpl;
function bytesFromBase64(b64) {
    if (globalThis.Buffer) {
        return Uint8Array.from(globalThis.Buffer.from(b64, "base64"));
    }
    else {
        const bin = globalThis.atob(b64);
        const arr = new Uint8Array(bin.length);
        for (let i = 0; i < bin.length; ++i) {
            arr[i] = bin.charCodeAt(i);
        }
        return arr;
    }
}
function base64FromBytes(arr) {
    if (globalThis.Buffer) {
        return globalThis.Buffer.from(arr).toString("base64");
    }
    else {
        const bin = [];
        arr.forEach((byte) => {
            bin.push(globalThis.String.fromCharCode(byte));
        });
        return globalThis.btoa(bin.join(""));
    }
}
function toTimestamp(date) {
    const seconds = Math.trunc(date.getTime() / 1000).toString();
    const nanos = (date.getTime() % 1000) * 1000000;
    return { seconds, nanos };
}
function fromTimestamp(t) {
    let millis = (globalThis.Number(t.seconds) || 0) * 1000;
    millis += (t.nanos || 0) / 1000000;
    return new globalThis.Date(millis);
}
function fromJsonTimestamp(o) {
    if (o instanceof globalThis.Date) {
        return toTimestamp(o);
    }
    else if (typeof o === "string") {
        return toTimestamp(new globalThis.Date(o));
    }
    else {
        return timestamp_1.Timestamp.fromJSON(o);
    }
}
function longToString(long) {
    return long.toString();
}
if (_m0.util.Long !== long_1.default) {
    _m0.util.Long = long_1.default;
    _m0.configure();
}
function isSet(value) {
    return value !== null && value !== undefined;
}
//# sourceMappingURL=query.js.map