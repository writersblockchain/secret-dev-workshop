import * as _m0 from "protobufjs/minimal";
import { Deposit, DepositParams, Proposal, TallyParams, Vote, VotingParams } from "./gov";
export declare const protobufPackage = "cosmos.gov.v1beta1";
/** GenesisState defines the gov module's genesis state. */
export interface GenesisState {
    /** starting_proposal_id is the ID of the starting proposal. */
    starting_proposal_id: string;
    /** deposits defines all the deposits present at genesis. */
    deposits: Deposit[];
    /** votes defines all the votes present at genesis. */
    votes: Vote[];
    /** proposals defines all the proposals present at genesis. */
    proposals: Proposal[];
    /** deposit_params defines all the parameters related to deposit. */
    deposit_params?: DepositParams | undefined;
    /** voting_params defines all the parameters related to voting. */
    voting_params?: VotingParams | undefined;
    /** tally_params defines all the parameters related to tally. */
    tally_params?: TallyParams | undefined;
}
export declare const GenesisState: {
    encode(message: GenesisState, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): GenesisState;
    fromJSON(object: any): GenesisState;
    toJSON(message: GenesisState): unknown;
    create(base?: {
        starting_proposal_id?: string | undefined;
        deposits?: {
            proposal_id?: string | undefined;
            depositor?: string | undefined;
            amount?: {
                denom?: string | undefined;
                amount?: string | undefined;
            }[] | undefined;
        }[] | undefined;
        votes?: {
            proposal_id?: string | undefined;
            voter?: string | undefined;
            option?: import("./gov").VoteOption | undefined;
            options?: {
                option?: import("./gov").VoteOption | undefined;
                weight?: string | undefined;
            }[] | undefined;
        }[] | undefined;
        proposals?: {
            proposal_id?: string | undefined;
            content?: {
                type_url?: string | undefined;
                value?: Uint8Array | undefined;
            } | undefined;
            status?: import("./gov").ProposalStatus | undefined;
            final_tally_result?: {
                yes?: string | undefined;
                abstain?: string | undefined;
                no?: string | undefined;
                no_with_veto?: string | undefined;
            } | undefined;
            submit_time?: {
                seconds?: string | undefined;
                nanos?: number | undefined;
            } | undefined;
            deposit_end_time?: {
                seconds?: string | undefined;
                nanos?: number | undefined;
            } | undefined;
            total_deposit?: {
                denom?: string | undefined;
                amount?: string | undefined;
            }[] | undefined;
            voting_start_time?: {
                seconds?: string | undefined;
                nanos?: number | undefined;
            } | undefined;
            voting_end_time?: {
                seconds?: string | undefined;
                nanos?: number | undefined;
            } | undefined;
        }[] | undefined;
        deposit_params?: {
            min_deposit?: {
                denom?: string | undefined;
                amount?: string | undefined;
            }[] | undefined;
            max_deposit_period?: {
                seconds?: string | undefined;
                nanos?: number | undefined;
            } | undefined;
        } | undefined;
        voting_params?: {
            voting_period?: {
                seconds?: string | undefined;
                nanos?: number | undefined;
            } | undefined;
        } | undefined;
        tally_params?: {
            quorum?: Uint8Array | undefined;
            threshold?: Uint8Array | undefined;
            veto_threshold?: Uint8Array | undefined;
        } | undefined;
    } | undefined): GenesisState;
    fromPartial(object: DeepPartial<GenesisState>): GenesisState;
};
declare type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;
export declare type DeepPartial<T> = T extends Builtin ? T : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {
    [K in keyof T]?: DeepPartial<T[K]>;
} : Partial<T>;
export {};
//# sourceMappingURL=genesis.d.ts.map