import * as _m0 from "protobufjs/minimal";
export declare const protobufPackage = "packetforward.v1";
/** GenesisState defines the packetforward genesis state */
export interface GenesisState {
    params?: Params | undefined;
    /**
     * key - information about forwarded packet: src_channel
     * (parsedReceiver.Channel), src_port (parsedReceiver.Port), sequence value -
     * information about original packet for refunding if necessary: retries,
     * srcPacketSender, srcPacket.DestinationChannel, srcPacket.DestinationPort
     */
    in_flight_packets: {
        [key: string]: InFlightPacket;
    };
}
export interface GenesisState_InFlightPacketsEntry {
    key: string;
    value?: InFlightPacket | undefined;
}
/** Params defines the set of packetforward parameters. */
export interface Params {
    fee_percentage: string;
}
/**
 * InFlightPacket contains information about original packet for
 * writing the acknowledgement and refunding if necessary.
 */
export interface InFlightPacket {
    original_sender_address: string;
    refund_channel_id: string;
    refund_port_id: string;
    packet_src_channel_id: string;
    packet_src_port_id: string;
    packet_timeout_timestamp: string;
    packet_timeout_height: string;
    packet_data: Uint8Array;
    refund_sequence: string;
    retries_remaining: number;
    timeout: string;
    nonrefundable: boolean;
}
export declare const GenesisState: {
    encode(message: GenesisState, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): GenesisState;
    fromJSON(object: any): GenesisState;
    toJSON(message: GenesisState): unknown;
    create(base?: {
        params?: {
            fee_percentage?: string | undefined;
        } | undefined;
        in_flight_packets?: {
            [x: string]: {
                original_sender_address?: string | undefined;
                refund_channel_id?: string | undefined;
                refund_port_id?: string | undefined;
                packet_src_channel_id?: string | undefined;
                packet_src_port_id?: string | undefined;
                packet_timeout_timestamp?: string | undefined;
                packet_timeout_height?: string | undefined;
                packet_data?: Uint8Array | undefined;
                refund_sequence?: string | undefined;
                retries_remaining?: number | undefined;
                timeout?: string | undefined;
                nonrefundable?: boolean | undefined;
            } | undefined;
        } | undefined;
    } | undefined): GenesisState;
    fromPartial(object: DeepPartial<GenesisState>): GenesisState;
};
export declare const GenesisState_InFlightPacketsEntry: {
    encode(message: GenesisState_InFlightPacketsEntry, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): GenesisState_InFlightPacketsEntry;
    fromJSON(object: any): GenesisState_InFlightPacketsEntry;
    toJSON(message: GenesisState_InFlightPacketsEntry): unknown;
    create(base?: {
        key?: string | undefined;
        value?: {
            original_sender_address?: string | undefined;
            refund_channel_id?: string | undefined;
            refund_port_id?: string | undefined;
            packet_src_channel_id?: string | undefined;
            packet_src_port_id?: string | undefined;
            packet_timeout_timestamp?: string | undefined;
            packet_timeout_height?: string | undefined;
            packet_data?: Uint8Array | undefined;
            refund_sequence?: string | undefined;
            retries_remaining?: number | undefined;
            timeout?: string | undefined;
            nonrefundable?: boolean | undefined;
        } | undefined;
    } | undefined): GenesisState_InFlightPacketsEntry;
    fromPartial(object: DeepPartial<GenesisState_InFlightPacketsEntry>): GenesisState_InFlightPacketsEntry;
};
export declare const Params: {
    encode(message: Params, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): Params;
    fromJSON(object: any): Params;
    toJSON(message: Params): unknown;
    create(base?: {
        fee_percentage?: string | undefined;
    } | undefined): Params;
    fromPartial(object: DeepPartial<Params>): Params;
};
export declare const InFlightPacket: {
    encode(message: InFlightPacket, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): InFlightPacket;
    fromJSON(object: any): InFlightPacket;
    toJSON(message: InFlightPacket): unknown;
    create(base?: {
        original_sender_address?: string | undefined;
        refund_channel_id?: string | undefined;
        refund_port_id?: string | undefined;
        packet_src_channel_id?: string | undefined;
        packet_src_port_id?: string | undefined;
        packet_timeout_timestamp?: string | undefined;
        packet_timeout_height?: string | undefined;
        packet_data?: Uint8Array | undefined;
        refund_sequence?: string | undefined;
        retries_remaining?: number | undefined;
        timeout?: string | undefined;
        nonrefundable?: boolean | undefined;
    } | undefined): InFlightPacket;
    fromPartial(object: DeepPartial<InFlightPacket>): InFlightPacket;
};
declare type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;
export declare type DeepPartial<T> = T extends Builtin ? T : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {
    [K in keyof T]?: DeepPartial<T[K]>;
} : Partial<T>;
export {};
//# sourceMappingURL=genesis.d.ts.map