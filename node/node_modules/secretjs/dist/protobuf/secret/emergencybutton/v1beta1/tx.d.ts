import * as _m0 from "protobufjs/minimal";
import { Params } from "./params";
export declare const protobufPackage = "secret.emergencybutton.v1beta1";
/**
 * MsgToggleIbcSwitch represents a message to toggle the emergencybutton status
 * by the defined pauser.
 */
export interface MsgToggleIbcSwitch {
    sender: string;
}
/** MsgToggleIbcSwitchResponse defines the response type for the toggle. */
export interface MsgToggleIbcSwitchResponse {
}
export interface MsgUpdateParams {
    /** authority is the address of the governance account. */
    authority: string;
    /**
     * params defines the x/emergencybutton parameters to update.
     *
     * NOTE: All parameters must be supplied.
     */
    params?: Params | undefined;
}
export interface MsgUpdateParamsResponse {
}
export declare const MsgToggleIbcSwitch: {
    encode(message: MsgToggleIbcSwitch, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): MsgToggleIbcSwitch;
    fromJSON(object: any): MsgToggleIbcSwitch;
    toJSON(message: MsgToggleIbcSwitch): unknown;
    create(base?: {
        sender?: string | undefined;
    } | undefined): MsgToggleIbcSwitch;
    fromPartial(object: DeepPartial<MsgToggleIbcSwitch>): MsgToggleIbcSwitch;
};
export declare const MsgToggleIbcSwitchResponse: {
    encode(_: MsgToggleIbcSwitchResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): MsgToggleIbcSwitchResponse;
    fromJSON(_: any): MsgToggleIbcSwitchResponse;
    toJSON(_: MsgToggleIbcSwitchResponse): unknown;
    create(base?: {} | undefined): MsgToggleIbcSwitchResponse;
    fromPartial(_: DeepPartial<MsgToggleIbcSwitchResponse>): MsgToggleIbcSwitchResponse;
};
export declare const MsgUpdateParams: {
    encode(message: MsgUpdateParams, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): MsgUpdateParams;
    fromJSON(object: any): MsgUpdateParams;
    toJSON(message: MsgUpdateParams): unknown;
    create(base?: {
        authority?: string | undefined;
        params?: {
            switch_status?: string | undefined;
            pauser_address?: string | undefined;
        } | undefined;
    } | undefined): MsgUpdateParams;
    fromPartial(object: DeepPartial<MsgUpdateParams>): MsgUpdateParams;
};
export declare const MsgUpdateParamsResponse: {
    encode(_: MsgUpdateParamsResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): MsgUpdateParamsResponse;
    fromJSON(_: any): MsgUpdateParamsResponse;
    toJSON(_: MsgUpdateParamsResponse): unknown;
    create(base?: {} | undefined): MsgUpdateParamsResponse;
    fromPartial(_: DeepPartial<MsgUpdateParamsResponse>): MsgUpdateParamsResponse;
};
/** Msg defines the bank Msg service. */
export interface Msg {
    /**
     * ToggleIbcSwitch defines a method for toggling the status of the
     * emergencybutton.
     */
    ToggleIbcSwitch(request: MsgToggleIbcSwitch): Promise<MsgToggleIbcSwitchResponse>;
    UpdateParams(request: MsgUpdateParams): Promise<MsgUpdateParamsResponse>;
}
export declare const MsgServiceName = "secret.emergencybutton.v1beta1.Msg";
export declare class MsgClientImpl implements Msg {
    private readonly rpc;
    private readonly service;
    constructor(rpc: Rpc, opts?: {
        service?: string;
    });
    ToggleIbcSwitch(request: MsgToggleIbcSwitch): Promise<MsgToggleIbcSwitchResponse>;
    UpdateParams(request: MsgUpdateParams): Promise<MsgUpdateParamsResponse>;
}
interface Rpc {
    request(service: string, method: string, data: Uint8Array): Promise<Uint8Array>;
}
declare type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;
export declare type DeepPartial<T> = T extends Builtin ? T : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {
    [K in keyof T]?: DeepPartial<T[K]>;
} : Partial<T>;
export {};
//# sourceMappingURL=tx.d.ts.map