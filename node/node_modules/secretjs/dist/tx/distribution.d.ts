import { AminoMsg, Msg, ProtoMsg } from "./types";
import { MsgSetWithdrawAddress as MsgSetWithdrawAddressParams, MsgWithdrawDelegatorReward as MsgWithdrawDelegatorRewardParams, MsgWithdrawValidatorCommission as MsgWithdrawValidatorCommissionParams, MsgFundCommunityPool as MsgFundCommunityPoolParams, MsgSetAutoRestake as MsgSetAutoRestakeParams, MsgCommunityPoolSpend as MsgCommunityPoolSpendParams, MsgDepositValidatorRewardsPool as MsgDepositValidatorRewardsPoolParams } from "../protobuf/cosmos/distribution/v1beta1/tx";
export { MsgSetWithdrawAddress as MsgSetWithdrawAddressParams, MsgWithdrawDelegatorReward as MsgWithdrawDelegatorRewardParams, MsgWithdrawValidatorCommission as MsgWithdrawValidatorCommissionParams, MsgFundCommunityPool as MsgFundCommunityPoolParams, MsgSetAutoRestake as MsgSetAutoRestakeParams, MsgCommunityPoolSpend as MsgCommunityPoolSpendParams, MsgDepositValidatorRewardsPool as MsgDepositValidatorRewardsPoolParams, } from "../protobuf/cosmos/distribution/v1beta1/tx";
/**
 * MsgSetWithdrawAddress sets the withdraw address for
 * a delegator (or validator self-delegation).
 */
export declare class MsgSetWithdrawAddress implements Msg {
    params: MsgSetWithdrawAddressParams;
    constructor(params: MsgSetWithdrawAddressParams);
    toProto(): Promise<ProtoMsg>;
    toAmino(): Promise<AminoMsg>;
}
/**
 * MsgWithdrawDelegatorReward represents delegation withdrawal to a delegator
 * from a single validator.
 */
export declare class MsgWithdrawDelegatorReward implements Msg {
    params: MsgWithdrawDelegatorRewardParams;
    constructor(params: MsgWithdrawDelegatorRewardParams);
    toProto(): Promise<ProtoMsg>;
    toAmino(): Promise<AminoMsg>;
}
/**
 * MsgWithdrawValidatorCommission withdraws the full commission to the validator
 * address.
 */
export declare class MsgWithdrawValidatorCommission implements Msg {
    params: MsgWithdrawValidatorCommissionParams;
    constructor(params: MsgWithdrawValidatorCommissionParams);
    toProto(): Promise<ProtoMsg>;
    toAmino(): Promise<AminoMsg>;
}
/**
 * MsgFundCommunityPool allows an account to directly
 * fund the community pool.
 */
export declare class MsgFundCommunityPool implements Msg {
    params: MsgFundCommunityPoolParams;
    constructor(params: MsgFundCommunityPoolParams);
    toProto(): Promise<ProtoMsg>;
    toAmino(): Promise<AminoMsg>;
}
/**
 * MsgSetAutoRestake enables or disables auto-restaking for
 * a delegator-validator pair.
 */
export declare class MsgSetAutoRestake implements Msg {
    params: MsgSetAutoRestakeParams;
    constructor(params: MsgSetAutoRestakeParams);
    toProto(): Promise<ProtoMsg>;
    toAmino(): Promise<AminoMsg>;
}
export declare class MsgCommunityPoolSpend implements Msg {
    params: MsgCommunityPoolSpendParams;
    constructor(params: MsgCommunityPoolSpendParams);
    toProto(): Promise<ProtoMsg>;
    toAmino(): Promise<AminoMsg>;
}
export declare class MsgDepositValidatorRewardsPool implements Msg {
    params: MsgDepositValidatorRewardsPoolParams;
    constructor(params: MsgDepositValidatorRewardsPoolParams);
    toProto(): Promise<ProtoMsg>;
    toAmino(): Promise<AminoMsg>;
}
//# sourceMappingURL=distribution.d.ts.map