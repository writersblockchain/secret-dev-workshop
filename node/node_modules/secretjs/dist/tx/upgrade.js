"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MsgCancelUpgrade = exports.MsgSoftwareUpgrade = exports.MsgCancelUpgradeParams = exports.MsgSoftwareUpgradeParams = void 0;
const tx_1 = require("../protobuf/cosmos/upgrade/v1beta1/tx");
var tx_2 = require("../protobuf/cosmos/upgrade/v1beta1/tx");
Object.defineProperty(exports, "MsgSoftwareUpgradeParams", { enumerable: true, get: function () { return tx_2.MsgSoftwareUpgrade; } });
Object.defineProperty(exports, "MsgCancelUpgradeParams", { enumerable: true, get: function () { return tx_2.MsgCancelUpgrade; } });
class MsgSoftwareUpgrade {
    constructor(params) {
        this.params = params;
    }
    toProto() {
        return __awaiter(this, void 0, void 0, function* () {
            return {
                type_url: `/cosmos.upgrade.v1beta1.MsgSoftwareUpgrade`,
                value: this.params,
                encode: () => tx_1.MsgSoftwareUpgrade.encode(this.params).finish(),
            };
        });
    }
    toAmino() {
        return __awaiter(this, void 0, void 0, function* () {
            throw new Error("Not implemented. Please use WalletProto");
        });
    }
}
exports.MsgSoftwareUpgrade = MsgSoftwareUpgrade;
class MsgCancelUpgrade {
    constructor(params) {
        this.params = params;
    }
    toProto() {
        return __awaiter(this, void 0, void 0, function* () {
            return {
                type_url: `/cosmos.upgrade.v1beta1.MsgCancelUpgrade`,
                value: this.params,
                encode: () => tx_1.MsgCancelUpgrade.encode(this.params).finish(),
            };
        });
    }
    toAmino() {
        return __awaiter(this, void 0, void 0, function* () {
            throw new Error("Not implemented. Please use WalletProto");
        });
    }
}
exports.MsgCancelUpgrade = MsgCancelUpgrade;
//# sourceMappingURL=upgrade.js.map